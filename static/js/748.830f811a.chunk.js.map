{"version":3,"file":"static/js/748.830f811a.chunk.js","mappings":"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","sources":["api/movie.js","pages/ReviewsPage/ReviewsPage.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3'\n})\n\nconst API_KEY = 'c1b8188455d3821cba1ec79084ee17ed'\nconst BEARER_TOKEN = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjMWI4MTg4NDU1ZDM4MjFjYmExZWM3OTA4NGVlMTdlZCIsInN1YiI6IjY1YjdmMDZjNWUxNGU1MDE2MmFlMWU1ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.IW781AOuYF1mEWb5Irhk_GdBt6plLw7t1_rJUMKx5l0';\n\nexport const getTrendingMovies = () => {\n  return instance.get('/trending/movie/day', {\n    headers: {\n      Authorization: `Bearer ${BEARER_TOKEN}`\n    }\n  })\n}\n\nexport const getMovieByQuery = (query) => {\n  const options = {\n    headers: {\n      Authorization: `Bearer ${BEARER_TOKEN}`\n    },\n    params: {\n      query: query\n    }\n  }\n  return instance.get('/search/movie', options)\n}\n\n\nexport const getMovieById = (movie_id) => {\n  return instance.get(`/movie/${movie_id}`, {\n    params: {\n      api_key: API_KEY,\n    }\n  } ,{\n    headers: {\n      Authorization: `Bearer ${BEARER_TOKEN}`\n    }\n  })\n}\n\nexport const getCastById = movie_id => {\n  return instance.get(`/movie/${movie_id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    }\n  } ,{\n    headers: {\n      Authorization: `Bearer ${BEARER_TOKEN}`\n    }\n  })\n}\n\nexport const getReviewsById = movie_id => {\n  return instance.get(`/movie/${movie_id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    }\n  } ,{\n    headers: {\n      Authorization: `Bearer ${BEARER_TOKEN}`\n    }\n  })\n}\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getReviewsById } from \"api/movie\";\n\nconst ReviewsPage = () => {\n  const [reviews, setReviews] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null)\n  const { movieId } = useParams()\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n        try {\n          setLoading(true)\n          const reviewsResponse = await getReviewsById(movieId);\n          setReviews(reviewsResponse.data.results);\n          console.log('reviewsResponse:', reviewsResponse.data.results);\n\n        } catch (error) {\n        setError(error.message)\n      }\n        finally {\n          setLoading(false)\n        }\n      }\n      fetchReviews()\n  }, [movieId])\n\n\n  const elements = reviews.map(({ id, author,content }) => (\n    <li key={id}>\n      <h5>{author}</h5>\n      <p>{content}</p>\n    </li>\n  ))\n\n  const isReviews = Boolean(reviews.length)\n\n  return (\n    <>\n      {loading && <p>...loading</p>}\n      {error && <p>{error}</p>}\n      {!loading && !isReviews && <p>No reviews available</p>}\n      {isReviews && <ul>{elements}</ul>}\n    </>\n  )\n}\n\nexport default ReviewsPage;\n"],"names":["instance","axios","baseURL","API_KEY","BEARER_TOKEN","getTrendingMovies","get","headers","Authorization","concat","getMovieByQuery","query","options","params","getMovieById","movie_id","api_key","getCastById","getReviewsById","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","movieId","useParams","useEffect","fetchReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","reviewsResponse","_context","prev","next","sent","data","results","console","log","t0","message","finish","stop","apply","arguments","elements","map","_ref2","id","author","content","_jsxs","children","_jsx","isReviews","Boolean","length","_Fragment"],"sourceRoot":""}