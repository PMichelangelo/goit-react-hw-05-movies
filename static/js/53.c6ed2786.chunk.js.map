{"version":3,"file":"static/js/53.c6ed2786.chunk.js","mappings":"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","sources":["api/movie.js","webpack://goit-react-hw-05-movies/./src/components/SingleMovie/singleMovie.module.css?10e4","components/SingleMovie/SingleMovie.jsx","pages/SingleMoviePage/SingleMoviePage.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3'\n})\n\nconst API_KEY = 'c1b8188455d3821cba1ec79084ee17ed'\nconst BEARER_TOKEN = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjMWI4MTg4NDU1ZDM4MjFjYmExZWM3OTA4NGVlMTdlZCIsInN1YiI6IjY1YjdmMDZjNWUxNGU1MDE2MmFlMWU1ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.IW781AOuYF1mEWb5Irhk_GdBt6plLw7t1_rJUMKx5l0';\n\nexport const getTrendingMovies = () => {\n  return instance.get('/trending/movie/day', {\n    headers: {\n      Authorization: `Bearer ${BEARER_TOKEN}`\n    }\n  })\n}\n\nexport const getMovieByQuery = (query) => {\n  const options = {\n    headers: {\n      Authorization: `Bearer ${BEARER_TOKEN}`\n    },\n    params: {\n      query: query\n    }\n  }\n  return instance.get('/search/movie', options)\n}\n\n\nexport const getMovieById = (movie_id) => {\n  return instance.get(`/movie/${movie_id}`, {\n    params: {\n      api_key: API_KEY,\n    }\n  } ,{\n    headers: {\n      Authorization: `Bearer ${BEARER_TOKEN}`\n    }\n  })\n}\n\nexport const getCastById = movie_id => {\n  return instance.get(`/movie/${movie_id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    }\n  } ,{\n    headers: {\n      Authorization: `Bearer ${BEARER_TOKEN}`\n    }\n  })\n}\n\nexport const getReviewsById = movie_id => {\n  return instance.get(`/movie/${movie_id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    }\n  } ,{\n    headers: {\n      Authorization: `Bearer ${BEARER_TOKEN}`\n    }\n  })\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"poster\":\"singleMovie_poster__VYanD\"};","import { useState, useEffect } from 'react'\nimport { useParams, useNavigate, useLocation, Link, Outlet } from 'react-router-dom'\nimport { getMovieById} from 'api/movie'\n\nimport styles from './singleMovie.module.css'\n\nconst SingleMovie = () => {\n  const [movie, setMovie] = useState()\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null)\n  const { movieId } = useParams()\n  const navigate = useNavigate()\n\n  const location = useLocation()\n  const from = location.state?.from || \"/\"\n  console.log(\"Pathname :\",location.pathname)\n\n  useEffect(() => {\n    const fetchSingleMovie = async () => {\n        try {\n          setLoading(true)\n          const movieResponse = await getMovieById(movieId);\n          setMovie(movieResponse.data);\n          console.log('movieResponse:', movieResponse.data);\n\n        } catch (error) {\n        setError(error.message)\n      }\n        finally {\n          setLoading(false)\n        }\n      }\n      fetchSingleMovie()\n  }, [movieId])\n\n  const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'\n\n  const goBack = () => navigate(from)\n\n  return (\n    <div>\n      {loading && <p>...loading</p>}\n      {error && <p>{error}</p>}\n      <button onClick={goBack} type='button'>Go back</button>\n      {movie && (\n        <div>\n          <h2>{movie.title} ({new Date(movie.release_date).getFullYear()})</h2>\n          <p>User score: {(movie.vote_average * 10).toFixed(0)}%</p>\n           {movie.backdrop_path ? (\n            <img className={styles.poster}\n              src={`https://image.tmdb.org/t/p/original${movie.poster_path}\n            `}\n            alt='poster'/>) : (<img src={defaultImg} alt=\"poster\" />)}\n          <h3>Overwie</h3>\n          <p>{movie.overview}</p>\n          <h3>Genres</h3>\n          <ul>\n            {movie.genres.map((genre) => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </ul>\n          <h5>Additional information</h5>\n          <ul>\n            <li>\n              <Link to=\"credits\" state={{ from }}>Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" state={{ from }}>Reviews</Link>\n            </li>\n            <Outlet/>\n          </ul>\n        </div>\n      )}\n    </div>\n)\n}\n\nexport default SingleMovie\n","import SingleMovie from 'components/SingleMovie/SingleMovie'\n\n//import styles from './singleMoviePage.module.css'\n\nconst SingleMoviePage = () => {\n  return (\n    <div>\n      <SingleMovie />\n    </div>\n\n\n  )\n\n}\n\nexport default SingleMoviePage\n"],"names":["instance","axios","baseURL","API_KEY","BEARER_TOKEN","getTrendingMovies","get","headers","Authorization","concat","getMovieByQuery","query","options","params","getMovieById","movie_id","api_key","getCastById","getReviewsById","_location$state","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","movieId","useParams","navigate","useNavigate","location","useLocation","from","state","console","log","pathname","useEffect","fetchSingleMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieResponse","_context","prev","next","sent","data","t0","message","finish","stop","apply","arguments","_jsxs","children","_jsx","onClick","type","title","Date","release_date","getFullYear","vote_average","toFixed","backdrop_path","className","styles","src","poster_path","alt","overview","genres","map","genre","name","id","Link","to","Outlet","SingleMovie"],"sourceRoot":""}