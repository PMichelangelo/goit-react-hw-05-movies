{"version":3,"file":"static/js/312.4f4783cf.chunk.js","mappings":"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","sources":["api/movie.js","components/SearchMovie/SearchMovie.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3'\n})\n\nconst API_KEY = 'c1b8188455d3821cba1ec79084ee17ed'\nconst BEARER_TOKEN = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjMWI4MTg4NDU1ZDM4MjFjYmExZWM3OTA4NGVlMTdlZCIsInN1YiI6IjY1YjdmMDZjNWUxNGU1MDE2MmFlMWU1ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.IW781AOuYF1mEWb5Irhk_GdBt6plLw7t1_rJUMKx5l0';\n\nexport const getTrendingMovies = () => {\n  return instance.get('/trending/movie/day', {\n    headers: {\n      Authorization: `Bearer ${BEARER_TOKEN}`\n    }\n  })\n}\n\nexport const getMovieByQuery = (query) => {\n  const options = {\n    headers: {\n      Authorization: `Bearer ${BEARER_TOKEN}`\n    },\n    params: {\n      query: query\n    }\n  }\n  return instance.get('/search/movie', options)\n}\n\n\nexport const getMovieById = (movie_id) => {\n  return instance.get(`/movie/${movie_id}`, {\n    params: {\n      api_key: API_KEY,\n    }\n  } ,{\n    headers: {\n      Authorization: `Bearer ${BEARER_TOKEN}`\n    }\n  })\n}\n\nexport const getCastById = movie_id => {\n  return instance.get(`/movie/${movie_id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    }\n  } ,{\n    headers: {\n      Authorization: `Bearer ${BEARER_TOKEN}`\n    }\n  })\n}\n\nexport const getReviewsById = movie_id => {\n  return instance.get(`/movie/${movie_id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    }\n  } ,{\n    headers: {\n      Authorization: `Bearer ${BEARER_TOKEN}`\n    }\n  })\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useSearchParams, useLocation} from \"react-router-dom\";\nimport { getMovieByQuery } from \"api/movie\";\n\nconst SearchMovie = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [errorMsg, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams()\n  const [value, setValue] = useState(searchParams.get(\"query\") || \"\");\n  const location = useLocation()\n\nuseEffect(() => {\n  const query = searchParams.get(\"query\");\n\n  const fetchMoviesByQuery = async (query) => {\n    try {\n      setLoading(true);\n      const response = await getMovieByQuery(query);\n      if (response.data.results.length === 0) {\n        setValue(\"\")\n        return alert(\"No movies found for your query.\");\n      }\n      setMovies(response.data.results);\n    } catch (error) {\n      setError(error.message);\n      console.error(\"Error fetching data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n    if (query) {\n     fetchMoviesByQuery(query);\n    }\n\n}, [searchParams]);\n\n  const onFormSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!value) {\n      return alert(\"Sorry, but we can't find an empty query\");\n    }\n\n    try {\n      setLoading(true);\n      setSearchParams({ query: value });\n      await getMovieByQuery(value)\n      //const response = await getMovieByQuery(value);\n      //setMovies(response.data.results);\n      //setSearchParams({query: value})\n    } catch (error) {\n      setError(errorMsg.message);\n      console.error(\"Error fetching data:\", error);\n    } finally {\n      setLoading(false);\n    }\n\n    searchParams.set(\"query :\", value);\n\n  };\n\n  return (\n    <>\n      <form onSubmit={onFormSubmit}>\n        <input\n          type=\"text\"\n          value={value}\n          onChange={(e) => setValue( e.target.value )}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {loading && <p>Loading...</p>}\n      <ul>\n        {movies.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{from: location}}>{title}</Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default SearchMovie;\n","import SearchMovie from \"components/SearchMovie/SearchMovie\"\n//import styles from './moviesPage.module.css'\n\n\nconst MoviesPage = () => {\n  return (\n    <div>\n      <SearchMovie/>\n    </div>\n  )\n}\n\nexport default MoviesPage\n"],"names":["instance","axios","baseURL","API_KEY","BEARER_TOKEN","getTrendingMovies","get","headers","Authorization","concat","getMovieByQuery","query","options","params","getMovieById","movie_id","api_key","getCastById","getReviewsById","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","errorMsg","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState7","_useState8","value","setValue","location","useLocation","useEffect","fetchMoviesByQuery","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","data","results","length","abrupt","alert","t0","message","console","error","finish","stop","_x","apply","arguments","onFormSubmit","_ref2","_callee2","e","_context2","preventDefault","set","_x2","_jsxs","_Fragment","children","onSubmit","_jsx","type","onChange","target","map","_ref3","id","title","Link","to","state","from","SearchMovie"],"sourceRoot":""}